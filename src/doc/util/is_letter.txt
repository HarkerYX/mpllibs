//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

is_letter
=========
Abel Sinkovics <abel@elte.hu>

Synopsis
--------

--------------------------------------
struct is_letter
{
  template <class c>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Checks if a character is a letter. Returns a wrapped boolean value.

Header
------

--------------------------------------
#include <mpllibs/util/is_letter.h>
--------------------------------------

Expression semantics
--------------------

The following expressions are equivalent:

--------------------------------------
boost::mpl::apply<is_letter, boost::mpl::char_<'a'> >
boost::mpl::true_

// ...

boost::mpl::apply<is_letter, boost::mpl::char_<'z'> >
boost::mpl::true_

boost::mpl::apply<is_letter, boost::mpl::char_<'A'> >
boost::mpl::true_

// ...

boost::mpl::apply<is_letter, boost::mpl::char_<'Z'> >
boost::mpl::true_

// For any other wrapped character c:

boost::mpl::apply<is_letter, c>
boost::mpl::false_
--------------------------------------

Example
-------

--------------------------------------
boost::mpl::apply<is_letter, boost::mpl::char_<'x'> >
--------------------------------------

include::../copyright[]

link:index.html[[up]]


