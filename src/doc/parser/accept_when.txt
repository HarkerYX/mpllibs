//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

accept_when
===========
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class p, class pred>
struct accept_when
{
  template <class s>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator taking a parser and a predicate as arguments. It builds a
parser that acccepts the input if and only if the original parsers accepts
the input and the predicate is +true+ for the result of the original parser.

Header
------

--------------------------------------
#include <mpllibs/parser/accept_when.h>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser, +pred+ predicate and +s+ compile-time string

--------------------------------------
boost::mpl::apply<accept_when<p, pred>, s>
--------------------------------------

is equivalent to

--------------------------------------
boost::mpl::apply<p, s>
--------------------------------------

when +boost::mpl::apply<p, s>+ is not +nothing+ and
+boost::mpl::apply<pred, boost::mpl::apply<p, s>::first>::type+ is +true+.
It is +nothing+ otherwise.

Example
-------

--------------------------------------
typedef
  boost::mpl::apply<
    mpllibs::parser::accept_when,
    mpllibs::util::is_digit
  >
  accept_digit;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


