//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

keyword
=======
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class s, class result_type>
struct keyword
{
  template <class s>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser accepting a string. The result of parsing is +result_type+. +result_type+
is optional, when not given, the result of successful parsing is undefined.

Header
------

--------------------------------------
#include <mpllibs/parser/keyword.h>
--------------------------------------

Expression semantics
--------------------

For any +k+ and +s+ compile-time strings

--------------------------------------
boost::mpl::apply<keyword<k>, s>
--------------------------------------

is equivalent to

--------------------------------------
mpllibs::util::pair<
  // unspecified
  ,
  // the last (<length of s> - <length of k>) characters of s
>
--------------------------------------

when +k+ is a prefix of +s+. It is +nothing+ is otherwise.

For any +k+ and +s+ compile-time strings and +c+ class

--------------------------------------
boost::mpl::apply<keyword<k, c>, s>
--------------------------------------

is equivalent to

--------------------------------------
mpllibs::util::pair<
  c,
  // the last (<length of s> - <length of k>) characters of s
>
--------------------------------------

when +k+ is a prefix of +s+. It is +nothing+ is otherwise.

Example
-------

--------------------------------------
typedef keyword<boost::mpl::string<'if'> > accept_if;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


