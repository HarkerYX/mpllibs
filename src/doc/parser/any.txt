//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

any
===
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class p>
struct any
{
  template <class s>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator taking a parser argument. It applies the parser on the input
string repeatedly as long as the parser accepts the input. The result of parsing
is a sequence of the results of the individual applications of the parser.

When the parser rejects the input for the first time, +any+ still accepts the
input and the result of parsing is the empty sequence.

Header
------

--------------------------------------
#include <mpllibs/parser/any.h>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser and +s+ compile-time string

--------------------------------------
boost::mpl::apply<any<p>, s>
--------------------------------------

is equivalent to +boost::mpl::list<>+ when +boost::mpl::apply<p, s>+
is +nothing+. It is

--------------------------------------
boost::mpl::push_front<
  boost::mpl::apply<any<p>, boost::mpl::apply<p, s>::type::second>::type,
  boost::mpl::apply<p, s>::type::first
>
--------------------------------------

otherwise.

Example
-------

--------------------------------------
typedef any<mpllibs::parser::alphanum> parse_word;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


