//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

token
=====
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class p>
struct token
{
  template <class s, class pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator taking a parser as argument. It applies its argument and when
it accepts the input, +token+ parsers white spaces that follow the accepted
input. The result of parsing is the result of applying +p+.

Header
------

--------------------------------------
#include <mpllibs/metaparse/token.h>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser

--------------------------------------
token<p>
--------------------------------------

is equivalent to

--------------------------------------
mpllibs::metaparse::first_of<p, mpllibs::metaparse::spaces>
--------------------------------------

when +p+ doesn't return an error. The combinator returns the error otherwise.

Example
-------

--------------------------------------
typedef
  mpllibs::metaparse::token<mpllibs::metaparse::digit_val>
  one_digit_word;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


