//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

except
======
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class p, class result, class error_msg>
struct except
{
  template <class s, class pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator taking a parser and a class as arguments. It accepts the input
when +p+ rejects it. The result of parsing is the +result+ argument.

Header
------

--------------------------------------
#include <mpllibs/metaparse/except.h>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser, +c+ class, +msg+ error message, +s+ compile-time string and
+pos+ source position the following are equivalent

--------------------------------------
mpllibs::metaparse::get_result<except<p, c, msg>, s, pos>::type
c
--------------------------------------

--------------------------------------
mpllibs::metaparse::get_remaining<except<p, c, msg>, s, pos>::type
s
--------------------------------------

--------------------------------------
mpllibs::metaparse::get_position<except<p, c, msg>, s, pos>::type
pos
--------------------------------------

when +p+ rejects the input. The result of the parser is an error with the error
message +msg+ otherwise.

Example
-------

--------------------------------------
struct no_digit_expected
{
  typedef no_digit_expected type;
};

typedef except<mpllibs::metaparse::digit, int, no_digit_expected> not_digit;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


