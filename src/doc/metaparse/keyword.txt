//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

keyword
=======
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class s, class result_type>
struct keyword
{
  template <class s, class pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser accepting a string. The result of parsing is +result_type+. +result_type+
is optional, when not given, the result of successful parsing is undefined.

Header
------

--------------------------------------
#include <mpllibs/metaparse/keyword.h>
--------------------------------------

Expression semantics
--------------------

For any +k+ and +s+ compile-time strings, +r+ class and +pos+ source position

--------------------------------------
mpllibs::metaparse::get_result<boost::mpl::apply<keyword<k, r>, s, pos> >::type
--------------------------------------

is equivalent to

--------------------------------------
r
--------------------------------------

when +k+ is a prefix of +s+. The parser combinator returns an error otherwise.

+r+ is optional, in case it is not specified, +keyword+ returns some result.

Example
-------

--------------------------------------
typedef keyword<boost::mpl::string<'if'> > accept_if;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


