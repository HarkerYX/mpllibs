//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

space
=====
Abel Sinkovics

Synopsis
--------

--------------------------------------
struct space
{
  template <class s, class pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser accepting one white space character. The result of parsing is undefined.

Header
------

--------------------------------------
#include <mpllibs/metaparse/space.h>
--------------------------------------

Expression semantics
--------------------

For any +s+ compile-time string and +pos+ source position

--------------------------------------
mpllibs::metaparse::get_remaining<boost::mpl::apply<spaces, s, pos> >::type
--------------------------------------

is equivalent to

--------------------------------------
boost::mpl::pop_front<s>::type
--------------------------------------

when +s+ is not empty and its first character is a white space. The combinator
returns an error otherwise.

Example
-------

--------------------------------------
typedef
  mpllibs::metaparse::get_remaining<
    boost::mpl::apply<space, boost::mpl::string<' abc'>, mpllibs::metaparse::start>
  >::type
  abc;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


