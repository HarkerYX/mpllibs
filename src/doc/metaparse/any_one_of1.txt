//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

any_one_of1
===========
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <
  class p1,
  class p2,
  // ...
  class pn
>
struct any_one_of1
{
  template <class s>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator taking a number of parsers as arguments. It tries using the
parsers. When any of them accepts the input, it tries all parsers with the
remaining input again. +any_one_of+ stops when no parser accepts the input.
The result of parsing is a sequence of the results of the individual parsings.
+any_one_of1+ expects at least one successful application of a parser. When it
is not possible, it rejects the input and returns
+mpllibs::metaparse::undefined+.

The maximum number of accepted parsers is defined by the
+PARSER_ONE_OF_MAX_ARGUMENT+ macro. Its default value is 20.

Header
------

--------------------------------------
#include <mpllibs/metaparse/any_one_of1.h>
--------------------------------------

Expression semantics
--------------------

For any +p1+, ..., +pn+ parsers

--------------------------------------
any_one_of1<
  p1,
  // ...
  pn
>
--------------------------------------

is equivalent to

--------------------------------------
mpllibs::metaparse::any1<
  mpllibs::metaparse::one_of<
    p1,
    // ...
    pn
  >
>
--------------------------------------

Example
-------

--------------------------------------
typedef
  any_one_of1<
    mpllibs::metaparse::lit_c<' '>,
    mpllibs::metaparse::lit_c<'\t'>,
    mpllibs::metaparse::lit_c<'\n'>,
    mpllibs::metaparse::lit_c<'\r'>
  >
  spaces;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


