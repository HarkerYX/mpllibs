//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

one_char
========
Abel Sinkovics

Synopsis
--------

--------------------------------------
struct one_char
{
  template <class S, class Pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser accepting one character. The result of parsing is the accepted
character. It fails for empty input.

Header
------

--------------------------------------
#include <mpllibs/metaparse/one_char.hpp>
--------------------------------------

Expression semantics
--------------------

For any +s+ compile-time string the following are equivalent

--------------------------------------
mpllibs::metaparse::get_result<boost::mpl::apply<one_char, s, pos> >

boost::mpl::front<s>
--------------------------------------

--------------------------------------
mpllibs::metaparse::get_remaining<boost::mpl::apply<one_char, s, pos> >

boost::mpl::pop_front<s>
--------------------------------------

when +s+ is not empty. The parser returns an error otherwise.

Example
-------

--------------------------------------
struct some_string;

typedef
  mpllibs::metaparse::get_result<boost::mpl::apply<one_char, some_string> >::type
  first_character_of_some_string;
--------------------------------------

include::../copyright[]

link:index.html[[up]]


