//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2011.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

bind
====
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class MonadTag, class A, class F>
struct bind
{
  // unspecified
};
--------------------------------------


Description
-----------

Takes a monad tag, a monadic value and a function mapping any value to a monadic
value as arguments, returns a new monadic value. It can be overloaded by
+MonadTag+, its behaviour is dependent on it.

Header
------

--------------------------------------
#include <mpllibs/metamonad/bind.hpp>
--------------------------------------

Example
-------

--------------------------------------
using boost::mpl::always;

struct one_error;
struct other_error;

typedef
  bind<
    exception_tag,
    exception<one_error>,
    always<exception<other_error> >
  >::type
  exception_one_error;
--------------------------------------

include::copyright[]

link:index.html[[up]]



