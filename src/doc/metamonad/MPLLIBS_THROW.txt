//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2011.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

MPLLIBS_THROW
=============
Abel Sinkovics

Synopsis
--------

--------------------------------------
#define MPLLIBS_THROW \
  // unspecified
--------------------------------------


Description
-----------

Macro evaluating to the name of a template class taking one argument. Instances
of the class can be used as values of the exception monad, representing
exceptions. The +tag+ of these exceptions is +exception_tag+.

Header
------

--------------------------------------
#include <mpllibs/metamonad/throw.hpp>
--------------------------------------

Expression semantics
--------------------

For any +d+ compile-time value, the following are equivalent

--------------------------------------
mpllibs::metamonad::get_data<MPLLIBS_THROW<d> >::type
d::type
--------------------------------------

Example
-------

--------------------------------------
using boost::mpl::eval_if;
using boost::mpl::equal_to;
using boost::mpl::int_;
using boost::mpl::divides;

struct division_by_zero;

template <class A, class B>
struct divide :
  eval_if<
    equal_to<A, int_<0> >,
    THROW<division_by_zero>,
    divides<A, B>
  >
  {};
--------------------------------------

include::../copyright[]

link:index.html[[up]]



