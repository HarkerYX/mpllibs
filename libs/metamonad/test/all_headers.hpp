// Copyright Abel Sinkovics (abel@sinkovics.hu) 2013.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

// No include guards to make it possible to include it multiple times

#include <mpllibs/metamonad/algebraic_data_type_tag.hpp>
#include <mpllibs/metamonad/already_lazy.hpp>
#include <mpllibs/metamonad/already_monadic.hpp>
#include <mpllibs/metamonad/apply.hpp>
#include <mpllibs/metamonad/bad_match.hpp>
#include <mpllibs/metamonad/bind_.hpp>
#include <mpllibs/metamonad/bind.hpp>
#include <mpllibs/metamonad/box.hpp>
#include <mpllibs/metamonad/box_tag.hpp>
#include <mpllibs/metamonad/calculated_value.hpp>
#include <mpllibs/metamonad/case_.hpp>
#include <mpllibs/metamonad/catch_all.hpp>
#include <mpllibs/metamonad/catch_c.hpp>
#include <mpllibs/metamonad/catch_.hpp>
#include <mpllibs/metamonad/catch_just.hpp>
#include <mpllibs/metamonad/compose.hpp>
#include <mpllibs/metamonad/concat.hpp>
#include <mpllibs/metamonad/concat_map.hpp>
#include <mpllibs/metamonad/data.hpp>
#include <mpllibs/metamonad/do_c.hpp>
#include <mpllibs/metamonad/do_.hpp>
#include <mpllibs/metamonad/do_return.hpp>
#include <mpllibs/metamonad/either.hpp>
#include <mpllibs/metamonad/eval_case.hpp>
#include <mpllibs/metamonad/eval_guard.hpp>
#include <mpllibs/metamonad/eval.hpp>
#include <mpllibs/metamonad/eval_let_c.hpp>
#include <mpllibs/metamonad/eval_let.hpp>
#include <mpllibs/metamonad/eval_letrec_c.hpp>
#include <mpllibs/metamonad/eval_letrec.hpp>
#include <mpllibs/metamonad/eval_match_let_c.hpp>
#include <mpllibs/metamonad/eval_match_let.hpp>
#include <mpllibs/metamonad/eval_multi_let_c.hpp>
#include <mpllibs/metamonad/eval_multi_let.hpp>
#include <mpllibs/metamonad/eval_syntax.hpp>
#include <mpllibs/metamonad/exception.hpp>
#include <mpllibs/metamonad/exception_tag.hpp>
#include <mpllibs/metamonad/fail.hpp>
#include <mpllibs/metamonad/fail_with_type.hpp>
#include <mpllibs/metamonad/first.hpp>
#include <mpllibs/metamonad/guard.hpp>
#include <mpllibs/metamonad/has_get_value.hpp>
#include <mpllibs/metamonad/has_value.hpp>
#include <mpllibs/metamonad/helper_metafunction.hpp>
#include <mpllibs/metamonad/_.hpp>
#include <mpllibs/metamonad/if_.hpp>
#include <mpllibs/metamonad/instantiate.hpp>
#include <mpllibs/metamonad/invalid_typeclass.hpp>
#include <mpllibs/metamonad/invalid_typeclass_tag.hpp>
#include <mpllibs/metamonad/is_exception.hpp>
#include <mpllibs/metamonad/is_same.hpp>
#include <mpllibs/metamonad/is_tag.hpp>
#include <mpllibs/metamonad/lambda_c.hpp>
#include <mpllibs/metamonad/lambda.hpp>
#include <mpllibs/metamonad/lazy_argument.hpp>
#include <mpllibs/metamonad/lazy.hpp>
#include <mpllibs/metamonad/lazy_metafunction.hpp>
#include <mpllibs/metamonad/lazy_protect_args.hpp>
#include <mpllibs/metamonad/let_c.hpp>
#include <mpllibs/metamonad/let.hpp>
#include <mpllibs/metamonad/letrec_c.hpp>
#include <mpllibs/metamonad/letrec.hpp>
#include <mpllibs/metamonad/limit_case_size.hpp>
#include <mpllibs/metamonad/limit_compose_arg_size.hpp>
#include <mpllibs/metamonad/limit_compose_size.hpp>
#include <mpllibs/metamonad/limit_data_size.hpp>
#include <mpllibs/metamonad/limit_do_size.hpp>
#include <mpllibs/metamonad/limit_instantiate_arity.hpp>
#include <mpllibs/metamonad/limit_metafunction_arity.hpp>
#include <mpllibs/metamonad/list.hpp>
#include <mpllibs/metamonad/list_tag.hpp>
#include <mpllibs/metamonad/make_monadic_c.hpp>
#include <mpllibs/metamonad/make_monadic.hpp>
#include <mpllibs/metamonad/make_syntax.hpp>
#include <mpllibs/metamonad/make_tmp_value.hpp>
#include <mpllibs/metamonad/mappend.hpp>
#include <mpllibs/metamonad/match_c.hpp>
#include <mpllibs/metamonad/matches_c.hpp>
#include <mpllibs/metamonad/matches.hpp>
#include <mpllibs/metamonad/match.hpp>
#include <mpllibs/metamonad/match_let_c.hpp>
#include <mpllibs/metamonad/match_let.hpp>
#include <mpllibs/metamonad/maybe.hpp>
#include <mpllibs/metamonad/mconcat.hpp>
#include <mpllibs/metamonad/mempty.hpp>
#include <mpllibs/metamonad/metafunction.hpp>
#include <mpllibs/metamonad/monad.hpp>
#include <mpllibs/metamonad/monad_plus.hpp>
#include <mpllibs/metamonad/monoid.hpp>
#include <mpllibs/metamonad/mplus.hpp>
#include <mpllibs/metamonad/multi_let_c.hpp>
#include <mpllibs/metamonad/multi_let.hpp>
#include <mpllibs/metamonad/mzero.hpp>
#include <mpllibs/metamonad/name.hpp>
#include <mpllibs/metamonad/no_case_matched.hpp>
#include <mpllibs/metamonad/overloading_error_tag.hpp>
#include <mpllibs/metamonad/pair.hpp>
#include <mpllibs/metamonad/pair_tag.hpp>
#include <mpllibs/metamonad/reader.hpp>
#include <mpllibs/metamonad/reader_tag.hpp>
#include <mpllibs/metamonad/return_.hpp>
#include <mpllibs/metamonad/returns.hpp>
#include <mpllibs/metamonad/second.hpp>
#include <mpllibs/metamonad/set.hpp>
#include <mpllibs/metamonad/state.hpp>
#include <mpllibs/metamonad/state_tag.hpp>
#include <mpllibs/metamonad/syntax.hpp>
#include <mpllibs/metamonad/syntax_tag.hpp>
#include <mpllibs/metamonad/tag_tag.hpp>
#include <mpllibs/metamonad/td_metafunction.hpp>
#include <mpllibs/metamonad/tmp_tag.hpp>
#include <mpllibs/metamonad/tmp_value.hpp>
#include <mpllibs/metamonad/try_c.hpp>
#include <mpllibs/metamonad/try_.hpp>
#include <mpllibs/metamonad/typeclass_expectations.hpp>
#include <mpllibs/metamonad/typeclass_expect.hpp>
#include <mpllibs/metamonad/typeclass.hpp>
#include <mpllibs/metamonad/unbox.hpp>
#include <mpllibs/metamonad/value_to_stream.hpp>
#include <mpllibs/metamonad/var.hpp>
#include <mpllibs/metamonad/var_tag.hpp>
#include <mpllibs/metamonad/writer.hpp>
#include <mpllibs/metamonad/writer_tag.hpp>

