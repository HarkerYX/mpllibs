//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2012.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

already_lazy
============
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class Exp>
struct already_lazy
{
  // unspecified
};
--------------------------------------


Description
-----------

+Exp+ is an angly bracket expression of metafunctions calling each other with
other angly bracket expressions as arguments. +already_lazy+ is expected to be
used in the expression passed to link:lazy.html[lazy]. The content of
+already_lazy+ is not transformed by +lazy+.

Header
------

--------------------------------------
#include <mpllibs/metamonad/already_lazy.hpp>
--------------------------------------

Expression semantics
--------------------

For any +c+ class

--------------------------------------
lazy<already_lazy<c> >::type
--------------------------------------

is equivalent to

--------------------------------------
c
--------------------------------------

Example
-------

--------------------------------------
using namespace boost::mpl;

template <class N>
struct fib :
  lazy<
    eval_if<
      less<N, int_<2> >,
      already_lazy<int_<1> >,
      already_lazy<
        lazy<plus<fib<minus<N, int_<1> > >, fib<minus<N, int_<2> > > >
      >
    >
  >
{};
--------------------------------------

include::copyright[]

link:reference.html[[up]]



