//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2011.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

get_data
========
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class Exception>
struct get_data
{
  // unspecified
};
--------------------------------------


Description
-----------

Returns the data describing the error from a compile-time error value.

Header
------

--------------------------------------
#include <mpllibs/metamonad/get_data.hpp>
--------------------------------------

For any +d+ compile-time value, the following are equivalent

--------------------------------------
mpllibs::metamonad::get_data<exception<d> >::type
d::type
--------------------------------------

Example
-------

--------------------------------------
using boost::mpl::eval_if;
using boost::mpl::equal_to;
using boost::mpl::int_;
using boost::mpl::divides;

struct division_by_zero;

template <class A, class B>
struct divide :
  eval_if<
    equal_to<A, int_<0> >,
    exception<division_by_zero>,
    divides<A, B>
  >
  {};

typedef
  get_data<divide<int_<13>, int_<0> > >::type
  the_reason;
--------------------------------------

include::copyright[]

link:reference.html[[up]]



