//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2011.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

return_
=======
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class MonadTag>
struct return_
{
  template <class T>
  struct apply
  {
    // unspecified
  };
};

template <class MonadTag, class T>
struct return_
{
  // unspecified
};
--------------------------------------


Description
-----------

+return_+ takes an arbitrary class and returns its monadic equivalent. It can be
overloaded by the monad the return value belongs to. This monad is specified by
+MonadTag+. It can used in two forms: either as a metafunction class
parametrised by the +tag+ of the monad or as a metafunction taking the +tag+ and
the value to lift into the monad as arguments.

Header
------

--------------------------------------
#include <mpllibs/metamonad/return_.hpp>
--------------------------------------

Example
-------

--------------------------------------
typedef return_<exception_tag, int> lifted_int;
--------------------------------------

include::copyright[]

link:index.html[[up]]



