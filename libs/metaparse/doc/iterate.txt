//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

iterate
=======
√Åbel Sinkovics

Synopsis
--------

--------------------------------------
template <class P, class N>
struct iterate
{
  template <class S, class Pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator taking a parser and an integer as arguments.
It applies the parser on the input string +N+ times. The result of parsing
is a sequence of the results of the individual applications of the parser.
+P+ has to accept the input +N+ times for +iterate+ to accept it.

Header
------

--------------------------------------
#include <mpllibs/metaparse/iterate.hpp>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser, +n+ wrapped integer the following are equivalent:

--------------------------------------
iterate<p, n>

mpllibs::metaparse::iterate_c<p, n::type::value>
--------------------------------------

Example
-------

--------------------------------------
typedef iterate<mpllibs::metaparse::one_char, boost::mpl::int_<3> > three_chars;
--------------------------------------

include::copyright[]

link:reference.html[[up]]


