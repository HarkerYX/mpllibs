//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

build_parser
============
Abel Sinkovics

Synopsis
--------

--------------------------------------
template <class P>
struct build_parser
{
  template <class S>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

This function can generate the external interface of a parser. It takes a
parser as argument and builds a metafunction class, that accepts an input
string and returns the result of parsing. It generates a compilation error
when parsing fails.

Header
------

--------------------------------------
#include <mpllibs/metaparse/build_parser.hpp>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser and +s+ compile-time string

--------------------------------------
boost::mpl::apply<build_parser<p>, s>
--------------------------------------

is equivalent to

--------------------------------------
mpllibs::metaparse::get_result<boost::mpl::apply<p, s> >
--------------------------------------

Example
-------

--------------------------------------
struct main_of_dsl_parser :
  // ...
{};

typedef build_parser<main_of_dsl_parser> dsl_parser;
--------------------------------------

include::copyright[]

link:index.html[[up]]


