//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

keyword
=======
√Åbel Sinkovics

Synopsis
--------

--------------------------------------
template <class S, class ResultType>
struct keyword
{
  template <class S, class Pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser accepting a keyword. The result of parsing is +ResultType+. +ResultType+
is optional; when not given, the result of successful parsing is undefined.

Header
------

--------------------------------------
#include <mpllibs/metaparse/keyword.hpp>
--------------------------------------

Expression semantics
--------------------

For any +r+ class and +k+ compile-time string that is built from the characters
+k1+ ... +kn+ the following are equivalent:

--------------------------------------
keyword<s, c>

mpllibs::metaparse::last_of<
  mpllibs::metaparse::lit<c1>,
  // ...
  mpllibs::metaparse::lit<cn>,
  mpllibs::metaparse::return_<r>
>
--------------------------------------

Example
-------

--------------------------------------
typedef keyword<boost::mpl::string<'if'> > accept_if;
--------------------------------------

include::copyright[]

link:reference.html[[up]]


