//    Copyright Abel Sinkovics (abel@sinkovics.hu) 2010.
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)

token
=====
√Åbel Sinkovics

Synopsis
--------

--------------------------------------
template <class P>
struct token
{
  template <class S, class Pos>
  struct apply
  {
    // unspecified
  };
};
--------------------------------------


Description
-----------

Parser combinator parsing taking a parser, +P+ as argument. It uses +P+ to parse
the input and consumes all whitespaces afterwards. The result of parsing is the
result of +P+.

Header
------

--------------------------------------
#include <mpllibs/metaparse/token.hpp>
--------------------------------------

Expression semantics
--------------------

For any +p+ parser the following are equivalent:

--------------------------------------
token<p>

mpllibs::metaparse::first_of<p, mpllibs::metaparse::spaces>
--------------------------------------

Example
-------

--------------------------------------
typedef
  mpllibs::metaparse::token<mpllibs::metaparse::digit_val>
  one_digit_word;
--------------------------------------

include::copyright[]

link:reference.html[[up]]


